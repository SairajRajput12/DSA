class Solution {
public:
    int minIncrementForUnique(vector<int>& nums) {
        // int answer = 0; 
        // sort(nums.begin(),nums.end()); 

        // for(int i = 1; i < nums.size(); i ++){
        //     if(nums[i] <= nums[i-1]){
        //         int increment = nums[i-1] + 1 - nums[i]; 
        //         answer += increment; 
        //         nums[i] += increment; 
        //     }
        // }

        // return answer; 
    
    
        // approach 2: using another
        int max_val = 0; 
        int n = nums.size(); 
        int answer = 0; 

        for(auto it : nums){
            max_val = max(max_val,it); 
        }

        vector<int> frequencyCount(n+max_val+1,0); 

        for (int val : nums) {
            frequencyCount[val]++;
        }

        for (int i = 0; i < frequencyCount.size(); i++) {
            if (frequencyCount[i] <= 1) continue;

            int duplicates = frequencyCount[i] - 1;
            frequencyCount[i + 1] += duplicates;
            frequencyCount[i] = 1;
            answer += duplicates;
        }

        return answer; 
    }
};