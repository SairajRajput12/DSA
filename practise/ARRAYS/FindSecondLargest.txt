//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
// User function template for C++
class Solution {
  public:
    // Function returns the second
    // largest elements
    int print2largest(vector<int> &arr) {
        // Code Here
        
        // approach 1: using variables 
        // TC: O(N) 
        // SC: O(1) 
        // int largest = INT_MIN, secondLargest = INT_MIN; 
        // for(int i = 0 ; i < arr.size(); i ++){
        //     largest = max(largest,arr[i]); 
        // }
        
        // for(int i = 0; i < arr.size(); i ++){
        //     if(largest != arr[i]){
        //         secondLargest = max(secondLargest,arr[i]); 
        //     }
        // }
        
        // return (secondLargest == INT_MIN ? -1 : secondLargest); 
        
        // approach 2: 
        // using sorting algorithm will take (O(nlogn)) 
        // SC: O(N) 
        
        // approach 2: 
        // using maxheap: 
        // TC: O(n)
        // SC: O(N) 
        
        // approach 3: 
        // using set: 
        // TC: O(N) 
        // SC: O(N)
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        Solution ob;
        int ans = ob.print2largest(arr);
        cout << ans << endl;
    }
    return 0;
}

// } Driver Code Ends