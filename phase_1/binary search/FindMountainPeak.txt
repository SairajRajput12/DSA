class Solution {
    public int peakIndexInMountainArray(int[] arr) {
        // approach 1: using simply for loop-----------> of time complexity O(n)
        // int max = Integer.MIN_VALUE; 
        // int index = 0; 
        // for(int i = 0; i < arr.length; i ++){
        //     if(max < arr[i] && arr[i + 1] < arr[i] && i < (arr.length - 1)){
        //         max = arr[i]; 
        //         index = i; 
        //         break; 
        //     }
        // }

        // using binary search: of time complexity O(log(n))
        int start = 0; 
        int end = arr.length; 
        int index = 0; 
        int mid = start + (end - start)/2; 
            while(start < end){
                mid = start + (end - start)/2;  
                if(arr[mid] > arr[mid + 1] && arr[mid] > arr[mid - 1]){
                        index = mid; 
                        return index; 
                }

                else if(arr[mid] < arr[mid + 1]){
                    start = mid + 1; 
                }

                else{
                    end = mid; 
                }
            }
        return mid; 
    }
}
