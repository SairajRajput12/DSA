class Solution {
private:
    int solve(int &start, int &end, vector<int> &nums, int target) {
        if (start > end) {
            return -1;
        }

        int mid = start + (end - start) / 2;
        if (nums[mid] == target) {
            return mid;
        }

        if (nums[start] <= nums[mid]) {
            if (nums[start] <= target && target <= nums[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        } else {
            if (nums[mid] <= target && target <= nums[end]) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }

        return solve(start, end, nums, target);
    }

public:
    int search(vector<int>& nums, int target) {
        int low = 0, end = nums.size() - 1;
        return solve(low, end, nums, target);
    }
};
