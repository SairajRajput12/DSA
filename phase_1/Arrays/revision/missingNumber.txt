class Solution {
public:
    int missingNumber(vector<int>& nums) {

        // bit manipulation approach
        // int ans = 0; 
        // for(int i = 0; i <= nums.size(); i ++){
        //     ans = ans ^(i); 
        // }

        // for(auto it : nums){
        //     ans ^= it; 
        // }
        // return ans; 

        // using another approach
        // sort(nums.begin(),nums.end()); 
        // int n = nums[nums.size()-1]; 
        // for(int i = 0; i < nums.size(); i ++){
        //     if(nums[i] != (i)){
        //         return (i); 
        //     }
        // }

        // return n+1; 

        // using binary search algorithm 
        sort(nums.begin(),nums.end()); 
        int start = 0, end = nums.size(); 
        int mid = start + (end - start)/2;
        while(start < end){
            if(nums[mid] > mid){
                end = mid; 
            }
            else{
                start = mid + 1; 
            }
            mid = start + (end - start)/2; 
        }

        return mid; 
    }
};