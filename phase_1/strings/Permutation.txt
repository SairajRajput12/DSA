/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>

using namespace std;

class Solution {
private: 
    bool checkEqual(int a[26],int b[26]){
        for(int i = 0; i < 26; i ++){
            if(a[i] != b[i]){
                return 0;
            }
        }

        return 1; 
    }
    
    void print(int a[26]){
        for(int i = 0; i < 26; i ++){
            cout << a[i] << " "; 
        }
        cout << endl; 
    }

public:
    bool checkInclusion(string s1, string s2) {

        // character count array: 
            int count1[26] = {0}; 
            for(int i = 0; i < s1.length(); i ++){
                int index = s1[i] - 'a'; 
                count1[index] ++; 
            }
        print(count1); 
        //  Go for second array: 
        //  window chalaunga in s1 string and compare it. 
        //  traversing s2 string. 

        int i = 0, windowSize = s1.length();
        // for first window 
        int count2[26] = {0};  
        while(i < windowSize && i < s2.length()){
                int index = s2[i] - 'a'; 
                count2[index] ++;
                i ++; 
        }    
        print(count2); 

        if(checkEqual(count1,count2)){
            cout<<"condition is valid"<<endl;
            return 1; 
        }

        // aage window process karo.
        while(i < s2.length())
        {
            cout << "Inside loop :" << endl; 
            char newChar = s2[i]; 
            int index = newChar - 'a'; 
            count2[index] ++; 
            // print(count2); 
            char oldChar = s2[i - windowSize]; 
            index = oldChar - 'a'; 
            count2[index] --; 
            print(count1); 
            print(count2);
            
            if(checkEqual(count1,count2)){
                cout << "Now,condition is valid and now i am returning 1" << endl;
                return 1; 
            }
            
            i ++; 
        }

        return 0; 
    }
};




int main()
{
    // cout<<"Hello World";
    Solution s; 
    cout << s.checkInclusion("ab","eidbaooo");
    
    return 0;
}
