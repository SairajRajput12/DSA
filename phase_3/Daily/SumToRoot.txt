/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void getSum(TreeNode* root,int &sum,int sum1){
        if(root == nullptr){
            return; 
        }

        sum1 = sum1*10 + root -> val; 
        if(root -> left == nullptr and root -> right == nullptr){
            sum += sum1; 
        }

        getSum(root->left,sum,sum1); 
        getSum(root->right,sum,sum1);         
    }

    int getSum1(TreeNode* root,int sum1){
        if(root == nullptr){
            return 0; 
        }

        sum1 = sum1 * 10 + root -> val; 
        if(root -> left == nullptr and root -> right == nullptr){
            return sum1; 
        }

        return getSum1(root->left,sum1) + getSum1(root->right,sum1); 
    }


    int sumNumbers(TreeNode* root) {
        // int sum = 0; 
        // int sum1 = 0;
        // getSum(root,sum,sum1); 
        // return sum; 
        return getSum1(root,0); 
    }
};