//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int f(int i,int arr[],int j,vector<vector<int>> &dp){
        if(i == j){
            // single matrix 
            return 0; 
        }
        
        if(dp[i][j] != -1){
            return dp[i][j]; 
        }
        
        int mini = INT_MAX; 
        for(int k = i; k < j; k ++){
            int steps = arr[i-1]*arr[k]*arr[j] + f(i,arr,k,dp) + f((k+1),arr,j,dp); 
            mini = min(mini,steps); 
        }
        
        dp[i][j] = mini; 
        
        return mini; 
    }

    int matrixMultiplication(int N, int arr[])
    {
        // code here
        vector<vector<int>> dp(N+1,vector<int> (N+1,-1)); 
        return f(1,arr,N-1,dp); 
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        cout<<ob.matrixMultiplication(N, arr)<<endl;
    }
    return 0;
}
// } Driver Code Ends