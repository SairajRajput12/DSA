/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(root == NULL){
            return 1; 
        }

        int level = 0; 
        queue<TreeNode*> q; 
        q.push(root); 
        int maxSum = INT_MIN; 
        int index = 0; 
        while(!q.empty())
        {
            int sampleSum = 0; 
            index ++; 
            int size = q.size(); 
            for(int i = 0; i < size; i ++){
                TreeNode* temp = q.front();
                q.pop(); 

                if(temp -> left != NULL){
                    q.push(temp -> left); 
                }

                if(temp -> right != NULL){
                    q.push(temp -> right); 
                }

                sampleSum += temp -> val; 
            }
            if(maxSum < sampleSum){
                maxSum = sampleSum; 
                level = index; 
            }
        }
        return level; 
    }
};
