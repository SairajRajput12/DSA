/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* solve(vector<int> &in,vector<int> &pre,int &preO,int left,int right){
        if(left > right){
            return NULL; 
        }

        TreeNode* ans = new TreeNode(pre[preO]); 
        int pos = 0; 
        while(in[pos] != pre[preO]) pos ++; 
        preO ++; 
        ans -> left = solve(in,pre,preO,left,pos - 1); 
        ans -> right = solve(in,pre,preO,pos+1,right); 
        return ans; 
    }
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int preOrderIndex = 0; 
        TreeNode* ans = solve(inorder,preorder,preOrderIndex,0,inorder.size()-1); 
        return ans; 
    }
};
