/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private: 
    bool solve(TreeNode* root, int targetSum,int k){
        if(root == NULL){
            return false; 
        }

        if(root -> left == NULL && root -> right == NULL){
            k = k + root -> val; 
            if(k == targetSum){
                return true; 
            } 
            return false; 
        }

        bool left = solve(root->left,targetSum,k+root->val); 
        bool right = solve(root -> right,targetSum,k+root->val); 
        return left||right; 
    }
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root == NULL){
            return false; 
        }
        return solve(root,targetSum,0); 
    }
};
