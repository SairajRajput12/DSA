/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void solve(TreeNode* root, int targetSum,int k,vector<vector<int>> &ans,vector<int> &sample){
        if(root == NULL){
            return; 
        }
        sample.push_back(root->val); 

        if (root->left == NULL && root->right == NULL && k + root->val == targetSum) {
            ans.push_back(sample);
        }

        solve(root->left,targetSum,k+root->val,ans,sample); 
        solve(root->right,targetSum,k+root->val,ans,sample); 
        sample.pop_back(); 
    }
public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans; 
        vector<int> sample; 
        solve(root,targetSum,0,ans,sample); 
        return ans; 
    }
};
