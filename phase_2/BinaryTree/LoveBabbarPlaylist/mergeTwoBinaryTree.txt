/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* solve(TreeNode* root1,TreeNode* root2){
        if(root1 == NULL  and  root2 == NULL){
            return NULL; 
        }

        TreeNode* ans = new TreeNode();  
        if(root1 != NULL and root2 != NULL){
            ans -> val = root1 -> val + root2 -> val; 
            ans -> left = solve(root1->left,root2->left); 
            ans -> right = solve(root1->right,root2->right);     
        }

        if(root1 == NULL and root2 != NULL){
            return root2; 
        }

        if(root1 != NULL and root2 == NULL){
            return root1; 
        }

        return ans; 
    }
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        TreeNode* ans = solve(root1,root2); 
        return ans; 
    }
};
