class Solution {
public:
    string replaceWords(vector<string>& dictionary, string sentence) {
        // first store the words in vector string 
//         vector<string>strings; 
        
//         for(int i = 0; i < sentence.size(); i ++){
//             if(sentence[i] == ' '){
//                 continue; 
//             }
//             else{
//                 int j = i; 
//                 while(j < sentence.size() && sentence[j] != ' '){
//                     j ++; 
//                 }
                
//                 int len = j - i; 
//                 string k = sentence.substr(i,len);
//                 strings.push_back(k); 
//                 i = j; 
//             }
//         }
        
//         // now go through each string and jisse match hora use replace karo 
//         for(int i = 0; i < strings.size(); i ++){
//             for(string x : dictionary){
//                 if(strings[i].substr(0,x.size()) == x ){
//                     strings[i] = x; 
//                 }
//             }
//         }
        
//         // now concatenate them 
//         string ans = ""; 
//         int i = 0; 
//         for(string j : strings){
//             ans = ans + j; 
            
//             if (i != strings.size() - 1) {
//                 ans += " ";
//             }
//             i ++; 
//         }
        
//         return ans; 
        
        unordered_set<string> dict;
        bool skip = false; 
        string res = ""; 
        string curr = ""; 
        for(auto x : dictionary){
            dict.insert(x); 
        }
        
        for(int i = 0; i <= sentence.size(); i ++){
            if(sentence[i] == ' ' or i == sentence.length()){
                res += curr; 
                if(i != sentence.size()){
                    res += " "; 
                }
                
                skip = false;
                curr = ""; 
            }        
            else if(!skip){
                curr += sentence[i]; 
                if(dict.find(curr) != dict.end()){
                    skip = true; 
                }
            }
        }
        
        return res; 
    }
};
