class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> maxi; 
        vector<int> ans; 
        for(int i = 0; i < k; i ++){
            while(!maxi.empty() && nums[maxi.back()] <= nums[i]){
                maxi.pop_back(); 
            }

            maxi.push_back(i); 
        }

        if (maxi.size() > 0) {
            ans.push_back(nums[maxi.front()]);
        } else {
            ans.push_back(0);
        }

        for(int i = k; i < nums.size(); i ++){
            if(!maxi.empty() && i - maxi.front() >= k){
                maxi.pop_front(); 
            }

            // addition wala logic 
            while(!maxi.empty() && nums[maxi.back()] <= nums[i])
                maxi.pop_back();

            maxi.push_back(i);
            ans.push_back(nums[maxi.front()]); 
        }

        return ans; 
    }
};
