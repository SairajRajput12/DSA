class Solution {
public:
    vector<int> arrayRankTransform(vector<int> &arr) {
        // algo:
        // 1. create the min heap
        // 2. traverse through each element and replace each element with the value of the index of that bst

        if(arr.size()==0) return {};
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        
        int n = arr.size(); 
        vector<int> res(n); 
        for(int i = 0; i < n; i ++){
            pq.push({arr[i],i}); 
        }

        int rank = 1; 
        int prev = pq.top().first; 
        res[pq.top().second] = rank; 
        pq.pop(); 

        while(!pq.empty()){
            if(pq.top().first > prev){
                rank ++; 
                prev = pq.top().first; 
            }

            res[pq.top().second] = rank; 
            pq.pop(); 
        }

        return res;
    }
};