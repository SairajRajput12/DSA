class Solution {
private:

    void heapify(vector<int> &arr, int i, int size) {
        int left = 2 * i + 1;
        int right = 2 * i + 2;
        int smallest = i;

        if (left < size and arr[left] > arr[smallest]) {
            smallest = left;
        }

        if (right < size and arr[right] > arr[smallest]) {
            smallest = right;
        }

        if (smallest != i) {
            swap(arr[smallest], arr[i]);
            heapify(arr, smallest, size);
        }
    }

    

public:
    vector<int> sortArray(vector<int> &nums) {
        // using heap sort
        for(int i = nums.size()/2-1; i >= 0; i --){
            heapify(nums,i,nums.size());
        }

        for(int i = nums.size()-1; i > 0; i --){
            swap(nums[0],nums[i]); 
            heapify(nums,0,i); 
        }

        return nums;
    }
};
